<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<aop:config proxy-target-class="true"></aop:config>
	<!-- Shiro提供了相应的注解用于权限控制，如果使用这些注解就需要使用AOP的功能来进行判断， 
		如Spring AOP；Shiro提供了Spring 
		AOP集成用于权限注解的解析和验证。Shiro注解不仅仅可以在web环境使用， 
		在独立的JavaSE中也是可以用的，（例如，@RequiresRoles，@RequiresPermissions等等）
		    @RequiresAuthentication  
			表示当前Subject已经通过login进行了身份验证；即Subject. isAuthenticated()返回true。 
   			@RequiresUser  
			表示当前Subject已经身份验证或者通过记住我登录的。
    		@RequiresGuest  
			表示当前Subject没有身份验证或通过记住我登录过，即是游客身份。  
		    @RequiresRoles(value={“admin”, “user”}, logical= Logical.AND)  
			表示当前Subject需要角色admin和user。
		    @RequiresPermissions (value={“user:a”, “user:b”}, logical= Logical.OR)  
		 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>